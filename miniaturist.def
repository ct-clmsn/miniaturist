#  Copyright (c) 2021 Christopher Taylor
#
#  SPDX-License-Identifier: BSL-1.0
#  Distributed under the Boost Software License, Version 1.0. (See accompanying
#  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
Bootstrap: library
From: ubuntu:20.04

%post -c bash
    echo "-- Running %post section"

    apt-get update -y && \
    apt-get install -y software-properties-common && \
    add-apt-repository universe && \
    apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install -y autotools-dev build-essential wget bash git liblapack-dev libblas-dev libxml2-dev libprotobuf-dev uuid-dev libssl-dev libkrb5-dev libhwloc-dev libopenmpi-dev openmpi-bin libtcmalloc-minimal4 pkg-config gsasl libgsasl7-dev libboost-all-dev libgoogle-perftools-dev google-mock googletest protobuf-compiler libpapi-dev libhwloc-dev libicu-dev

    export GIT_SSL_NO_VERIFY=true
    export PATH=/usr/bin:/usr/local/bin:$PATH
    export LD_LIBRARY_PATH=/usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/lib64/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH

    cd /tmp
    echo "-- Downloading cmake"
    wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-linux-x86_64.sh
    chmod ugo+x cmake-3.21.0-linux-x86_64.sh
    echo "-- Installing cmake"
    mkdir /tmp/cmake
    ./cmake-3.21.0-linux-x86_64.sh --skip-license --prefix=/tmp/cmake
    export PATH=/tmp/cmake/bin:$PATH
    cd /tmp

    echo "-- Downloading OTF2"
    wget http://perftools.pages.jsc.fz-juelich.de/cicd/otf2/tags/otf2-2.3/otf2-2.3.tar.gz
    tar xzf otf2-2.3.tar.gz
    cd otf2-2.3
    ./configure && make && make install
    cd /tmp
    rm -rf otf2-2.3 otf2-2.3.tar.gz

    echo "-- git cloning repositories"

    echo "-- installing blaze"
    rm -rf blaze
    git clone https://bitbucket.org/blaze-lib/blaze.git
    cd blaze
    mkdir build
    cd build
    cmake ..
    make && make install
    cd /tmp

    echo "-- installing blaze_tensor"
    rm -rf blaze_tensor
    git clone https://github.com/STEllAR-GROUP/blaze_tensor.git
    cd blaze_tensor
    mkdir build
    cd build
    cmake ..
    make && make install
    cd /tmp

    echo "-- installing ste||ar hpx"
    rm -rf hpx
    git clone https://github.com/STEllAR-GROUP/hpx.git
    cd hpx
    mkdir build
    cd build
    cmake -DHPX_WITH_PARCELPORT_MPI=ON -DHPX_WITH_APEX=ON -DHPX_WITH_PAPI=ON -DHPX_WITH_FETCH_ASIO=ON -DHPX_WITH_TESTS=OFF -DHPX_WITH_EXAMPLES=OFF -DHPX_WITH_MALLOC=tcmalloc -DTCMALLOC_LIBRARY=/usr/lib/x86_64-linux-gnu/libtcmalloc_minimal.so -DTCMALLOC_INCLUDE_DIR=/usr/include/google/tcmalloc.h .. && make && make install
    cd /tmp

    echo "-- installing libhdfs3"
    rm -rf libhdfs3
    git clone https://github.com/ct-clmsn/libhdfs3.git
    cd libhdfs3
    mkdir build
    cd build
     ../bootstrap --prefix=/usr/local --dependency=/usr/lib/x86_64-linux-gnu:/usr/lib:/usr/local/lib && make && make install
    cd /tmp

    echo "-- installing miniaturist"
    rm -rf miniaturist
    git clone https://github.com/ct-clmsn/miniaturist.git
    cd miniaturist
    mkdir build
    cd build
    cmake -Dblaze_DIR=/usr/share/blaze/cmake -DHPX_DIR=/usr/lib/cmake/HPX -Dlibhdfs3_DIR=/usr/local .. && make && make install
    cd /tmp

    rm -rf blaze blaze_tensor hpx libhdfs3 miniaturist
